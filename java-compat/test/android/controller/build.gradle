//
// Copyright (c) ZeroC, Inc. All rights reserved.
//

buildscript {
    repositories {
        google()
        maven {
            url "https://plugins.gradle.org/m2/"
        }
    }
    dependencies {
        classpath 'com.android.tools.build:gradle:8.1.1'
        classpath 'gradle.plugin.com.zeroc.gradle.ice-builder:slice:1.5.0'
    }
}

apply plugin: 'com.android.application'
apply plugin: "com.zeroc.gradle.ice-builder.slice"

slice {
    compat = true
    output = file("${project.buildDir}/generated/source/ice")
    cppConfiguration = project.cppConfiguration
    cppPlatform = project.cppPlatform
    if(!System.env.ICE_BIN_DIST?.split(" ").find{ it == 'all' || it.contains('java')}) {
        iceHome =  project.hasProperty('iceHome') ? project.iceHome
            : System.getenv("ICE_HOME") != null ? System.env.ICE_HOME : new File("$rootProject.projectDir/../../../..").getCanonicalPath()
    }
    java {
        files = fileTree(dir: "$rootProject.projectDir/../../../../scripts/", includes: ['*.ice'])
    }
}

project.ext.srcDist = new File([project.slice.iceHome, "java", "src"].join(File.separator)).exists()
repositories {
    if(project.ext.srcDist) {
        repositories {
            flatDir dirs: "file://${project.slice.iceHome}/java-compat/lib"
        }
    }

    if(this.devRepo) {
        maven {
            url this.devRepo
        }
    }

    google()
    mavenCentral()
}

android {
    compileSdk 33

    defaultConfig {
        applicationId "com.zeroc.testcontroller"
        minSdkVersion 21
        targetSdkVersion 33
        multiDexEnabled true // Necessary otherwise we'd exceed the 64K DEX limit.
        compileOptions {
            sourceCompatibility JavaVersion.VERSION_1_7
            targetCompatibility JavaVersion.VERSION_1_7
        }
    }

    buildTypes {
        debug {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard.cfg'
        }

        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard.cfg'
        }
    }
    namespace 'com.zeroc.testcontroller'
}

task copyBksTask(type: Copy) {
    from "${rootProject.projectDir}/../../../../certs/client.bks"
    from "${rootProject.projectDir}/../../../../certs/server.bks"
    into "src/main/res/raw"
}
preBuild.dependsOn(copyBksTask)

clean {
    delete("src/main/res/raw/client.bks")
    delete("src/main/res/raw/server.bks")
}

ext.localDependency = { artifactId ->
    def useBinDist = System.env.ICE_BIN_DIST?.split(" ").find{ it == 'all' || it.contains('java')}
    if(useBinDist) {
        return "com.zeroc:${artifactId}:${project.iceVersion}"
    } else {
        return ":${artifactId}-${project.iceVersion}"
    }
}

dependencies {
    implementation localDependency("glacier2-compat")
    implementation localDependency("ice-compat")
    runtimeOnly localDependency("icediscovery-compat")
    runtimeOnly localDependency("icebt-compat")

    implementation files("${rootProject.projectDir}/../../../lib/test.jar")
    runtimeOnly "org.apache.commons:commons-compress:1.20"
}
